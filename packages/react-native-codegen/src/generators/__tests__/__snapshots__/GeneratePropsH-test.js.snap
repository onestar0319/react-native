// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeneratePropsH can generate fixture ARRAY_PROPS 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>
#include <react/graphics/Color.h>
#include <react/graphics/Geometry.h>
#include <react/imagemanager/primitives.h>
#include <vector>

namespace facebook {
namespace react {

class ArrayPropsNativeComponentProps final : public ViewProps {
 public:
  ArrayPropsNativeComponentProps() = default;
  ArrayPropsNativeComponentProps(const ArrayPropsNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const std::vector<std::string> names{};
  const std::vector<bool> disableds{};
  const std::vector<int> progress{};
  const std::vector<Float> radii{};
  const std::vector<SharedColor> colors{};
  const std::vector<ImageSource> srcs{};
  const std::vector<Point> points{};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture BOOLEAN_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class BooleanPropNativeComponentProps final : public ViewProps {
 public:
  BooleanPropNativeComponentProps() = default;
  BooleanPropNativeComponentProps(const BooleanPropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{false};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture COLOR_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>
#include <react/graphics/Color.h>

namespace facebook {
namespace react {

class ColorPropNativeComponentProps final : public ViewProps {
 public:
  ColorPropNativeComponentProps() = default;
  ColorPropNativeComponentProps(const ColorPropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const SharedColor tintColor{};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture ENUM_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

enum class EnumPropsNativeComponentAlignment { Top, Center, Bottom };

static inline void fromRawValue(const RawValue &value, EnumPropsNativeComponentAlignment &result) {
  auto string = (std::string)value;
  if (string == \\"top\\") { result = EnumPropsNativeComponentAlignment::Top; return; }
  if (string == \\"center\\") { result = EnumPropsNativeComponentAlignment::Center; return; }
  if (string == \\"bottom\\") { result = EnumPropsNativeComponentAlignment::Bottom; return; }
  abort();
}

static inline std::string toString(const EnumPropsNativeComponentAlignment &value) {
  switch (value) {
    case EnumPropsNativeComponentAlignment::Top: return \\"top\\";
    case EnumPropsNativeComponentAlignment::Center: return \\"center\\";
    case EnumPropsNativeComponentAlignment::Bottom: return \\"bottom\\";
  }
}

class EnumPropsNativeComponentProps final : public ViewProps {
 public:
  EnumPropsNativeComponentProps() = default;
  EnumPropsNativeComponentProps(const EnumPropsNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const EnumPropsNativeComponentAlignment alignment{EnumPropsNativeComponentAlignment::Center};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture EVENT_NESTED_OBJECT_PROPS 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class EventsNestedObjectNativeComponentProps final : public ViewProps {
 public:
  EventsNestedObjectNativeComponentProps() = default;
  EventsNestedObjectNativeComponentProps(const EventsNestedObjectNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{false};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture EVENT_PROPS 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class EventsNativeComponentProps final : public ViewProps {
 public:
  EventsNativeComponentProps() = default;
  EventsNativeComponentProps(const EventsNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{false};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture FLOAT_PROPS 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class FloatPropNativeComponentProps final : public ViewProps {
 public:
  FloatPropNativeComponentProps() = default;
  FloatPropNativeComponentProps(const FloatPropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const Float blurRadius{0.0};
  const Float blurRadius2{0.001};
  const Float blurRadius3{2.1};
  const Float blurRadius4{0.0};
  const Float blurRadius5{1.0};
  const Float blurRadius6{0.0};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture IMAGE_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>
#include <react/imagemanager/primitives.h>

namespace facebook {
namespace react {

class ImagePropNativeComponentProps final : public ViewProps {
 public:
  ImagePropNativeComponentProps() = default;
  ImagePropNativeComponentProps(const ImagePropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const ImageSource thumbImage{};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture INTEGER_PROPS 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class IntegerPropNativeComponentProps final : public ViewProps {
 public:
  IntegerPropNativeComponentProps() = default;
  IntegerPropNativeComponentProps(const IntegerPropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const int progress1{0};
  const int progress2{-1};
  const int progress3{10};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture INTERFACE_ONLY 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class InterfaceOnlyComponentProps final : public ViewProps {
 public:
  InterfaceOnlyComponentProps() = default;
  InterfaceOnlyComponentProps(const InterfaceOnlyComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const std::string accessibilityHint{\\"\\"};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture MULTI_NATIVE_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>
#include <react/graphics/Color.h>
#include <react/graphics/Geometry.h>
#include <react/imagemanager/primitives.h>

namespace facebook {
namespace react {

class ImageColorPropNativeComponentProps final : public ViewProps {
 public:
  ImageColorPropNativeComponentProps() = default;
  ImageColorPropNativeComponentProps(const ImageColorPropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const ImageSource thumbImage{};
  const SharedColor color{};
  const SharedColor thumbTintColor{};
  const Point point{};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture POINT_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>
#include <react/graphics/Geometry.h>

namespace facebook {
namespace react {

class PointPropNativeComponentProps final : public ViewProps {
 public:
  PointPropNativeComponentProps() = default;
  PointPropNativeComponentProps(const PointPropNativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const Point startPoint{};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture STRING_PROP 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class StringPropComponentProps final : public ViewProps {
 public:
  StringPropComponentProps() = default;
  StringPropComponentProps(const StringPropComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const std::string accessibilityHint{\\"\\"};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture TWO_COMPONENTS_DIFFERENT_FILES 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class MultiFile1NativeComponentProps final : public ViewProps {
 public:
  MultiFile1NativeComponentProps() = default;
  MultiFile1NativeComponentProps(const MultiFile1NativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{false};
};

class MultiFile2NativeComponentProps final : public ViewProps {
 public:
  MultiFile2NativeComponentProps() = default;
  MultiFile2NativeComponentProps(const MultiFile2NativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{true};
};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GeneratePropsH can generate fixture TWO_COMPONENTS_SAME_FILE 1`] = `
Map {
  "Props.h" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
#pragma once

#include <react/components/view/ViewProps.h>

namespace facebook {
namespace react {

class MultiComponent1NativeComponentProps final : public ViewProps {
 public:
  MultiComponent1NativeComponentProps() = default;
  MultiComponent1NativeComponentProps(const MultiComponent1NativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{false};
};

class MultiComponent2NativeComponentProps final : public ViewProps {
 public:
  MultiComponent2NativeComponentProps() = default;
  MultiComponent2NativeComponentProps(const MultiComponent2NativeComponentProps &sourceProps, const RawProps &rawProps);

#pragma mark - Props

  const bool disabled{true};
};

} // namespace react
} // namespace facebook
",
}
`;
