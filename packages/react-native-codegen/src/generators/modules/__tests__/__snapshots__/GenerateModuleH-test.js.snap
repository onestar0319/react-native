// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateModuleH can generate fixture COMPLEX_OBJECTS 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeSampleTurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSampleTurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual jsi::Object difficult(jsi::Runtime &rt, const jsi::Object &A) = 0;
virtual void optionals(jsi::Runtime &rt, const jsi::Object &A) = 0;
virtual void optionalMethod(jsi::Runtime &rt, const jsi::Object &options, const jsi::Function &callback, const jsi::Array &extras) = 0;
virtual void getArrays(jsi::Runtime &rt, const jsi::Object &options) = 0;

};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleH can generate fixture EMPTY_NATIVE_MODULES 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeSampleTurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSampleTurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:


};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleH can generate fixture NATIVE_MODULES_WITH_TYPE_ALIASES 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeAliasTurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeAliasTurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
virtual void cropImage(jsi::Runtime &rt, const jsi::Object &cropData) = 0;

};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleH can generate fixture REAL_MODULE_EXAMPLE 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeCameraRollManagerCxxSpecJSI : public TurboModule {
protected:
  NativeCameraRollManagerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
virtual jsi::Value getPhotos(jsi::Runtime &rt, const jsi::Object &params) = 0;
virtual jsi::Value saveToCameraRoll(jsi::Runtime &rt, const jsi::String &uri, const jsi::String &type) = 0;
virtual jsi::Value deletePhotos(jsi::Runtime &rt, const jsi::Array &assets) = 0;

};

class JSI_EXPORT NativeImagePickerIOSCxxSpecJSI : public TurboModule {
protected:
  NativeImagePickerIOSCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual void openCameraDialog(jsi::Runtime &rt, const jsi::Object &config, const jsi::Function &successCallback, const jsi::Function &cancelCallback) = 0;

};

class JSI_EXPORT NativeExceptionsManagerCxxSpecJSI : public TurboModule {
protected:
  NativeExceptionsManagerCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual void reportFatalException(jsi::Runtime &rt, const jsi::String &message, const jsi::Array &stack, double exceptionId) = 0;
virtual void reportSoftException(jsi::Runtime &rt, const jsi::String &message, const jsi::Array &stack, double exceptionId) = 0;
virtual void reportException(jsi::Runtime &rt, const jsi::Object &data) = 0;
virtual void updateExceptionMessage(jsi::Runtime &rt, const jsi::String &message, const jsi::Array &stack, double exceptionId) = 0;
virtual void dismissRedbox(jsi::Runtime &rt) = 0;

};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleH can generate fixture SIMPLE_NATIVE_MODULES 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeSampleTurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSampleTurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
virtual void voidFunc(jsi::Runtime &rt) = 0;
virtual bool getBool(jsi::Runtime &rt, bool arg) = 0;
virtual double getNumber(jsi::Runtime &rt, double arg) = 0;
virtual jsi::String getString(jsi::Runtime &rt, const jsi::String &arg) = 0;
virtual jsi::Array getArray(jsi::Runtime &rt, const jsi::Array &arg) = 0;
virtual jsi::Object getObject(jsi::Runtime &rt, const jsi::Object &arg) = 0;
virtual double getRootTag(jsi::Runtime &rt, double arg) = 0;
virtual jsi::Object getValue(jsi::Runtime &rt, double x, const jsi::String &y, const jsi::Object &z) = 0;
virtual void getValueWithCallback(jsi::Runtime &rt, const jsi::Function &callback) = 0;
virtual jsi::Value getValueWithPromise(jsi::Runtime &rt, bool error) = 0;

};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleH can generate fixture TWO_MODULES_DIFFERENT_FILES 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeSampleTurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSampleTurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual void voidFunc(jsi::Runtime &rt) = 0;

};

class JSI_EXPORT NativeSample2TurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSample2TurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual jsi::Object getConstants(jsi::Runtime &rt) = 0;
virtual void voidFunc(jsi::Runtime &rt) = 0;

};

} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleH can generate fixture TWO_MODULES_SAME_FILE 1`] = `
Map {
  "NativeModules.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>

namespace facebook {
namespace react {

class JSI_EXPORT NativeSampleTurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSampleTurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual void voidFunc(jsi::Runtime &rt) = 0;

};

class JSI_EXPORT NativeSample2TurboModuleCxxSpecJSI : public TurboModule {
protected:
  NativeSample2TurboModuleCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
virtual void voidFunc(jsi::Runtime &rt) = 0;

};

} // namespace react
} // namespace facebook
",
}
`;
