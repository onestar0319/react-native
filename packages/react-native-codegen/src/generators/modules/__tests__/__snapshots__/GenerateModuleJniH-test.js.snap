// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateModuleJniH can generate fixture COMPLEX_OBJECTS 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'SampleTurboModule'
 */
class JSI_EXPORT NativeSampleTurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSampleTurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> COMPLEX_OBJECTS_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_complex_objects

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;

exports[`GenerateModuleJniH can generate fixture EMPTY_NATIVE_MODULES 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'SampleTurboModule'
 */
class JSI_EXPORT NativeSampleTurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSampleTurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> EMPTY_NATIVE_MODULES_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_empty_native_modules

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;

exports[`GenerateModuleJniH can generate fixture NATIVE_MODULES_WITH_TYPE_ALIASES 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'AliasTurboModule'
 */
class JSI_EXPORT NativeAliasTurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeAliasTurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> NATIVE_MODULES_WITH_TYPE_ALIASES_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_native_modules_with_type_aliases

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;

exports[`GenerateModuleJniH can generate fixture REAL_MODULE_EXAMPLE 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'CameraRollManager'
 */
class JSI_EXPORT NativeCameraRollManagerSpecJSI : public JavaTurboModule {
public:
  NativeCameraRollManagerSpecJSI(const JavaTurboModule::InitParams &params);
};

/**
 * JNI C++ class for module 'ExceptionsManager'
 */
class JSI_EXPORT NativeExceptionsManagerSpecJSI : public JavaTurboModule {
public:
  NativeExceptionsManagerSpecJSI(const JavaTurboModule::InitParams &params);
};

/**
 * JNI C++ class for module 'ImagePickerIOS'
 */
class JSI_EXPORT NativeImagePickerIOSSpecJSI : public JavaTurboModule {
public:
  NativeImagePickerIOSSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> REAL_MODULE_EXAMPLE_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_real_module_example

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;

exports[`GenerateModuleJniH can generate fixture SIMPLE_NATIVE_MODULES 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'SampleTurboModule'
 */
class JSI_EXPORT NativeSampleTurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSampleTurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> SIMPLE_NATIVE_MODULES_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_simple_native_modules

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;

exports[`GenerateModuleJniH can generate fixture TWO_MODULES_DIFFERENT_FILES 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'SampleTurboModule'
 */
class JSI_EXPORT NativeSampleTurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSampleTurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};

/**
 * JNI C++ class for module 'Sample2TurboModule'
 */
class JSI_EXPORT NativeSample2TurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSample2TurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> TWO_MODULES_DIFFERENT_FILES_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_two_modules_different_files

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;

exports[`GenerateModuleJniH can generate fixture TWO_MODULES_SAME_FILE 1`] = `
Map {
  "SampleSpec.h" => "/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by codegen project: GenerateModuleJniH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * JNI C++ class for module 'SampleTurboModule'
 */
class JSI_EXPORT NativeSampleTurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSampleTurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};

/**
 * JNI C++ class for module 'Sample2TurboModule'
 */
class JSI_EXPORT NativeSample2TurboModuleSpecJSI : public JavaTurboModule {
public:
  NativeSample2TurboModuleSpecJSI(const JavaTurboModule::InitParams &params);
};


std::shared_ptr<TurboModule> TWO_MODULES_SAME_FILE_ModuleProvider(const std::string moduleName, const JavaTurboModule::InitParams &params);

} // namespace react
} // namespace facebook
",
  "Android.mk" => "# Copyright (c) Facebook, Inc. and its affiliates.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.

LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)

LOCAL_MODULE := react_codegen_two_modules_same_file

LOCAL_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SRC_FILES := $(wildcard $(LOCAL_PATH)/*.cpp)

LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)

LOCAL_SHARED_LIBRARIES := libreact_nativemodule_core

LOCAL_STATIC_LIBRARIES := libjsi

LOCAL_CFLAGS := \\\\
  -DLOG_TAG=\\\\\\"ReactNative\\\\\\"

LOCAL_CFLAGS += -fexceptions -frtti -std=c++14 -Wall

include $(BUILD_SHARED_LIBRARY)
",
}
`;
