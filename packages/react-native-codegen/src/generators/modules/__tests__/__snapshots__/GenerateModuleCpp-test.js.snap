// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateModuleCpp can generate fixture EMPTY_NATIVE_MODULES 1`] = `
Map {
  "NativeModules.cpp" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#include <react/modules/EMPTY_NATIVE_MODULES/NativeModules.h>

namespace facebook {
namespace react {



NativeSampleTurboModuleSpecJSI::NativeSampleTurboModuleSpecJSI(std::shared_ptr<JSCallInvoker> jsInvoker)
  : TurboModule(\\"SampleTurboModule\\", jsInvoker) {

}


} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleCpp can generate fixture SIMPLE_NATIVE_MODULES 1`] = `
Map {
  "NativeModules.cpp" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#include <react/modules/SIMPLE_NATIVE_MODULES/NativeModules.h>

namespace facebook {
namespace react {

static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getConstants(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getConstants(rt);
}

static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->voidFunc(rt);
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getBool(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getBool(rt, args[0].getBool());
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getNumber(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getNumber(rt, args[0].getNumber());
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getString(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getString(rt, args[0].getString(rt));
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getArray(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getArray(rt, args[0].getObject(rt).getArray(rt));
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getObject(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getObject(rt, args[0].getObject(rt));
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getValue(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getValue(rt, args[0].getNumber(), args[1].getString(rt), args[2].getObject(rt));
}

static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getValueWithCallback(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getValueWithCallback(rt, std::move(args[0].getObject(rt).getFunction(rt)));
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_getValueWithPromise(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->getValueWithPromise(rt, args[0].getBool());
}

NativeSampleTurboModuleSpecJSI::NativeSampleTurboModuleSpecJSI(std::shared_ptr<JSCallInvoker> jsInvoker)
  : TurboModule(\\"SampleTurboModule\\", jsInvoker) {
  methodMap_[\\"getConstants\\"] = MethodMetadata {0, __hostFunction_NativeSampleTurboModuleSpecJSI_getConstants};
  methodMap_[\\"voidFunc\\"] = MethodMetadata {0, __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc};
  methodMap_[\\"getBool\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getBool};
  methodMap_[\\"getNumber\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getNumber};
  methodMap_[\\"getString\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getString};
  methodMap_[\\"getArray\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getArray};
  methodMap_[\\"getObject\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getObject};
  methodMap_[\\"getValue\\"] = MethodMetadata {3, __hostFunction_NativeSampleTurboModuleSpecJSI_getValue};
  methodMap_[\\"getValueWithCallback\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getValueWithCallback};
  methodMap_[\\"getValueWithPromise\\"] = MethodMetadata {1, __hostFunction_NativeSampleTurboModuleSpecJSI_getValueWithPromise};
}


} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleCpp can generate fixture TWO_MODULES_DIFFERENT_FILES 1`] = `
Map {
  "NativeModules.cpp" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#include <react/modules/TWO_MODULES_DIFFERENT_FILES/NativeModules.h>

namespace facebook {
namespace react {


static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->voidFunc(rt);
  return jsi::Value::undefined();
}

NativeSampleTurboModuleSpecJSI::NativeSampleTurboModuleSpecJSI(std::shared_ptr<JSCallInvoker> jsInvoker)
  : TurboModule(\\"SampleTurboModule\\", jsInvoker) {
  methodMap_[\\"voidFunc\\"] = MethodMetadata {0, __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc};
}

static jsi::Value __hostFunction_NativeSample2TurboModuleSpecJSI_voidFunc(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeSample2TurboModuleSpecJSI *>(&turboModule)->voidFunc(rt);
  return jsi::Value::undefined();
}

NativeSample2TurboModuleSpecJSI::NativeSample2TurboModuleSpecJSI(std::shared_ptr<JSCallInvoker> jsInvoker)
  : TurboModule(\\"Sample2TurboModule\\", jsInvoker) {
  methodMap_[\\"voidFunc\\"] = MethodMetadata {0, __hostFunction_NativeSample2TurboModuleSpecJSI_voidFunc};
}


} // namespace react
} // namespace facebook
",
}
`;

exports[`GenerateModuleCpp can generate fixture TWO_MODULES_SAME_FILE 1`] = `
Map {
  "NativeModules.cpp" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

#include <react/modules/TWO_MODULES_SAME_FILE/NativeModules.h>

namespace facebook {
namespace react {


static jsi::Value __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeSampleTurboModuleSpecJSI *>(&turboModule)->voidFunc(rt);
  return jsi::Value::undefined();
}

NativeSampleTurboModuleSpecJSI::NativeSampleTurboModuleSpecJSI(std::shared_ptr<JSCallInvoker> jsInvoker)
  : TurboModule(\\"SampleTurboModule\\", jsInvoker) {
  methodMap_[\\"voidFunc\\"] = MethodMetadata {0, __hostFunction_NativeSampleTurboModuleSpecJSI_voidFunc};
}

static jsi::Value __hostFunction_NativeSample2TurboModuleSpecJSI_voidFunc(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeSample2TurboModuleSpecJSI *>(&turboModule)->voidFunc(rt);
  return jsi::Value::undefined();
}

NativeSample2TurboModuleSpecJSI::NativeSample2TurboModuleSpecJSI(std::shared_ptr<JSCallInvoker> jsInvoker)
  : TurboModule(\\"Sample2TurboModule\\", jsInvoker) {
  methodMap_[\\"voidFunc\\"] = MethodMetadata {0, __hostFunction_NativeSample2TurboModuleSpecJSI_voidFunc};
}


} // namespace react
} // namespace facebook
",
}
`;
