// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateComponentHObjCpp can generate fixture ARRAY_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTArrayPropsNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture ARRAY_PROPS_WITH_NESTED_OBJECT 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTArrayPropsNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture BOOLEAN_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTBooleanPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture COLOR_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTColorPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture COMMANDS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTCommandNativeComponentViewProtocol <NSObject>
- (void)flashScrollIndicators;
- (void)allTypes:(NSInteger)x y:(float)y z:(double)z message:(NSString *)message animated:(BOOL)animated;
@end

RCT_EXTERN inline void RCTCommandNativeComponentHandleCommand(
  id<RCTCommandNativeComponentViewProtocol> componentView,
  NSString const *commandName,
  NSArray const *args)
{
  if ([commandName isEqualToString:@\\"flashScrollIndicators\\"]) {
#if RCT_DEBUG
  if ([args count] != 0) {
    RCTLogError(@\\"%@ command %@ received %d arguments, expected %d.\\", @\\"CommandNativeComponent\\", commandName, (int)[args count], 0);
    return;
  }
#endif

  

  [componentView flashScrollIndicators];
  return;
}

if ([commandName isEqualToString:@\\"allTypes\\"]) {
#if RCT_DEBUG
  if ([args count] != 5) {
    RCTLogError(@\\"%@ command %@ received %d arguments, expected %d.\\", @\\"CommandNativeComponent\\", commandName, (int)[args count], 5);
    return;
  }
#endif

  NSObject *arg0 = args[0];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg0, [NSNumber class], @\\"number\\", @\\"CommandNativeComponent\\", commandName, @\\"1st\\")) {
    return;
  }
#endif
  NSInteger x = [(NSNumber *)arg0 intValue];

NSObject *arg1 = args[1];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg1, [NSNumber class], @\\"float\\", @\\"CommandNativeComponent\\", commandName, @\\"2nd\\")) {
    return;
  }
#endif
  float y = [(NSNumber *)arg1 floatValue];

NSObject *arg2 = args[2];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg2, [NSNumber class], @\\"double\\", @\\"CommandNativeComponent\\", commandName, @\\"3rd\\")) {
    return;
  }
#endif
  double z = [(NSNumber *)arg2 doubleValue];

NSObject *arg3 = args[3];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg3, [NSString class], @\\"string\\", @\\"CommandNativeComponent\\", commandName, @\\"4th\\")) {
    return;
  }
#endif
  NSString * message = (NSString *)arg3;

NSObject *arg4 = args[4];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg4, [NSNumber class], @\\"boolean\\", @\\"CommandNativeComponent\\", commandName, @\\"5th\\")) {
    return;
  }
#endif
  BOOL animated = [(NSNumber *)arg4 boolValue];

  [componentView allTypes:x y:y z:z message:message animated:animated];
  return;
}

#if RCT_DEBUG
  RCTLogError(@\\"%@ received command %@, which is not a supported command.\\", @\\"CommandNativeComponent\\", commandName);
#endif
}

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture COMMANDS_AND_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTCommandNativeComponentViewProtocol <NSObject>
- (void)handleRootTag:(double)rootTag;
- (void)hotspotUpdate:(NSInteger)x y:(NSInteger)y;
@end

RCT_EXTERN inline void RCTCommandNativeComponentHandleCommand(
  id<RCTCommandNativeComponentViewProtocol> componentView,
  NSString const *commandName,
  NSArray const *args)
{
  if ([commandName isEqualToString:@\\"handleRootTag\\"]) {
#if RCT_DEBUG
  if ([args count] != 1) {
    RCTLogError(@\\"%@ command %@ received %d arguments, expected %d.\\", @\\"CommandNativeComponent\\", commandName, (int)[args count], 1);
    return;
  }
#endif

  NSObject *arg0 = args[0];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg0, [NSNumber class], @\\"double\\", @\\"CommandNativeComponent\\", commandName, @\\"1st\\")) {
    return;
  }
#endif
  double rootTag = [(NSNumber *)arg0 doubleValue];

  [componentView handleRootTag:rootTag];
  return;
}

if ([commandName isEqualToString:@\\"hotspotUpdate\\"]) {
#if RCT_DEBUG
  if ([args count] != 2) {
    RCTLogError(@\\"%@ command %@ received %d arguments, expected %d.\\", @\\"CommandNativeComponent\\", commandName, (int)[args count], 2);
    return;
  }
#endif

  NSObject *arg0 = args[0];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg0, [NSNumber class], @\\"number\\", @\\"CommandNativeComponent\\", commandName, @\\"1st\\")) {
    return;
  }
#endif
  NSInteger x = [(NSNumber *)arg0 intValue];

NSObject *arg1 = args[1];
#if RCT_DEBUG
  if (!RCTValidateTypeOfViewCommandArgument(arg1, [NSNumber class], @\\"number\\", @\\"CommandNativeComponent\\", commandName, @\\"2nd\\")) {
    return;
  }
#endif
  NSInteger y = [(NSNumber *)arg1 intValue];

  [componentView hotspotUpdate:x y:y];
  return;
}

#if RCT_DEBUG
  RCTLogError(@\\"%@ received command %@, which is not a supported command.\\", @\\"CommandNativeComponent\\", commandName);
#endif
}

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture DOUBLE_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTDoublePropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture EVENT_NESTED_OBJECT_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTEventsNestedObjectNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture EVENT_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTEventsNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture EVENTS_WITH_PAPER_NAME 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTInterfaceOnlyComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture EXCLUDE_ANDROID 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTExcludedAndroidComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture EXCLUDE_ANDROID_IOS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN



NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture FLOAT_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTFloatPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture IMAGE_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTImagePropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture INSETS_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTInsetsPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture INT32_ENUM_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTInt32EnumPropsNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture INTEGER_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTIntegerPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture INTERFACE_ONLY 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTInterfaceOnlyComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture MULTI_NATIVE_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTImageColorPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture NO_PROPS_NO_EVENTS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTNoPropsNoEventsComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture OBJECT_PROPS 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTObjectPropsViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture POINT_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTPointPropNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture STRING_ENUM_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTStringEnumPropsNativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture STRING_PROP 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTStringPropComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture TWO_COMPONENTS_DIFFERENT_FILES 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTMultiFile1NativeComponentViewProtocol <NSObject>

@end

@protocol RCTMultiFile2NativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;

exports[`GenerateComponentHObjCpp can generate fixture TWO_COMPONENTS_SAME_FILE 1`] = `
Map {
  "RCTComponentViewHelpers.h" => "/**
* Copyright (c) Facebook, Inc. and its affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

#import <Foundation/Foundation.h>
#import <React/RCTDefines.h>
#import <React/RCTLog.h>

NS_ASSUME_NONNULL_BEGIN

@protocol RCTMultiComponent1NativeComponentViewProtocol <NSObject>

@end

@protocol RCTMultiComponent2NativeComponentViewProtocol <NSObject>

@end

NS_ASSUME_NONNULL_END",
}
`;
