// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GenerateViewConfigJs can generate fixture ARRAY_PROPS 1`] = `
Map {
  "ARRAY_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ArrayPropsNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ArrayPropsNativeComponent',

  validAttributes: {
    names: true,
    disableds: true,
    progress: true,
    radii: true,

    colors: {
      process: require('processColorArray'),
    },

    srcs: true,
    points: true,
    sizes: true,
    object: true,
    array: true,
    arrayOfArrayOfObject: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture ARRAY_PROPS_WITH_NESTED_OBJECT 1`] = `
Map {
  "ARRAY_PROPS_WITH_NESTED_OBJECTNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ArrayPropsNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ArrayPropsNativeComponent',

  validAttributes: {
    nativePrimitives: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture BOOLEAN_PROP 1`] = `
Map {
  "BOOLEAN_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'BooleanPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'BooleanPropNativeComponent',

  validAttributes: {
    disabled: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture COLOR_PROP 1`] = `
Map {
  "COLOR_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ColorPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ColorPropNativeComponent',

  validAttributes: {
    tintColor: {
      process: require('processColor'),
    },
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture COMMANDS 1`] = `
Map {
  "COMMANDSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');
const {dispatchCommand} = require(\\"react-native/Libraries/Renderer/shims/ReactNative\\");

let nativeComponentName = 'CommandNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'CommandNativeComponent',
  validAttributes: {},
}));

export const Commands = {
    flashScrollIndicators(ref) {
        dispatchCommand(ref, \\"flashScrollIndicators\\", []);
    },

    allTypes(ref, x, y, z, message, animated) {
        dispatchCommand(ref, \\"allTypes\\", [x, y, z, message, animated]);
    }
};
",
}
`;

exports[`GenerateViewConfigJs can generate fixture COMMANDS_AND_PROPS 1`] = `
Map {
  "COMMANDS_AND_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');
const {dispatchCommand} = require(\\"react-native/Libraries/Renderer/shims/ReactNative\\");

let nativeComponentName = 'CommandNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'CommandNativeComponent',

  validAttributes: {
    accessibilityHint: true,
  },
}));

export const Commands = {
    handleRootTag(ref, rootTag) {
        dispatchCommand(ref, \\"handleRootTag\\", [rootTag]);
    },

    hotspotUpdate(ref, x, y) {
        dispatchCommand(ref, \\"hotspotUpdate\\", [x, y]);
    }
};
",
}
`;

exports[`GenerateViewConfigJs can generate fixture DOUBLE_PROPS 1`] = `
Map {
  "DOUBLE_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'DoublePropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'DoublePropNativeComponent',

  validAttributes: {
    blurRadius: true,
    blurRadius2: true,
    blurRadius3: true,
    blurRadius4: true,
    blurRadius5: true,
    blurRadius6: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture EVENT_NESTED_OBJECT_PROPS 1`] = `
Map {
  "EVENT_NESTED_OBJECT_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'EventsNestedObjectNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'EventsNestedObjectNativeComponent',

  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },
  },

  validAttributes: {
    disabled: true,
    onChange: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture EVENT_PROPS 1`] = `
Map {
  "EVENT_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'EventsNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'EventsNativeComponent',

  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },

    topEnd: {
      phasedRegistrationNames: {
        captured: 'onEndCapture',
        bubbled: 'onEnd',
      },
    },
  },

  directEventTypes: {
    topEventDirect: {
      registrationName: 'onEventDirect',
    },

    topOrientationChange: {
      registrationName: 'onOrientationChange',
    },
  },

  validAttributes: {
    disabled: true,
    onChange: true,
    onEventDirect: true,
    onOrientationChange: true,
    onEnd: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture EVENTS_WITH_PAPER_NAME 1`] = `
Map {
  "EVENTS_WITH_PAPER_NAMENativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'RCTInterfaceOnlyComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'RCTInterfaceOnlyComponent',

  bubblingEventTypes: {
    paperChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },

    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },
  },

  directEventTypes: {
    paperDirectChange: {
      registrationName: 'onDire tChange',
    },

    topDire tChange: {
      registrationName: 'onDire tChange',
    },
  },

  validAttributes: {
    onChange: true,
    onDire tChange: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture EXCLUDE_ANDROID 1`] = `
Map {
  "EXCLUDE_ANDROIDNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ExcludedAndroidComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ExcludedAndroidComponent',
  validAttributes: {},
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture EXCLUDE_ANDROID_IOS 1`] = `
Map {
  "EXCLUDE_ANDROID_IOSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ExcludedAndroidIosComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ExcludedAndroidIosComponent',
  validAttributes: {},
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture FLOAT_PROPS 1`] = `
Map {
  "FLOAT_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'FloatPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'FloatPropNativeComponent',

  validAttributes: {
    blurRadius: true,
    blurRadius2: true,
    blurRadius3: true,
    blurRadius4: true,
    blurRadius5: true,
    blurRadius6: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture IMAGE_PROP 1`] = `
Map {
  "IMAGE_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ImagePropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ImagePropNativeComponent',

  validAttributes: {
    thumbImage: {
      process: require('resolveAssetSource'),
    },
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture INSETS_PROP 1`] = `
Map {
  "INSETS_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'InsetsPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'InsetsPropNativeComponent',

  validAttributes: {
    contentInset: {
      diff: require('insetsDiffer'),
    },
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture INT32_ENUM_PROP 1`] = `
Map {
  "INT32_ENUM_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'Int32EnumPropsNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'Int32EnumPropsNativeComponent',

  validAttributes: {
    maxInterval: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture INTEGER_PROPS 1`] = `
Map {
  "INTEGER_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'IntegerPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'IntegerPropNativeComponent',

  validAttributes: {
    progress1: true,
    progress2: true,
    progress3: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture INTERFACE_ONLY 1`] = `
Map {
  "INTERFACE_ONLYNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'RCTInterfaceOnlyComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'RCTInterfaceOnlyComponent',

  bubblingEventTypes: {
    topChange: {
      phasedRegistrationNames: {
        captured: 'onChangeCapture',
        bubbled: 'onChange',
      },
    },
  },

  validAttributes: {
    accessibilityHint: true,
    onChange: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture MULTI_NATIVE_PROP 1`] = `
Map {
  "MULTI_NATIVE_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ImageColorPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ImageColorPropNativeComponent',

  validAttributes: {
    thumbImage: {
      process: require('resolveAssetSource'),
    },

    color: {
      process: require('processColor'),
    },

    thumbTintColor: {
      process: require('processColor'),
    },

    point: {
      diff: require('pointsDiffer'),
    },
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture NO_PROPS_NO_EVENTS 1`] = `
Map {
  "NO_PROPS_NO_EVENTSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'NoPropsNoEventsComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'NoPropsNoEventsComponent',
  validAttributes: {},
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture OBJECT_PROPS 1`] = `
Map {
  "OBJECT_PROPSNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'ObjectProps';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'ObjectProps',

  validAttributes: {
    objectProp: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture POINT_PROP 1`] = `
Map {
  "POINT_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'PointPropNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'PointPropNativeComponent',

  validAttributes: {
    startPoint: {
      diff: require('pointsDiffer'),
    },
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture STRING_ENUM_PROP 1`] = `
Map {
  "STRING_ENUM_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'StringEnumPropsNativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'StringEnumPropsNativeComponent',

  validAttributes: {
    alignment: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture STRING_PROP 1`] = `
Map {
  "STRING_PROPNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'StringPropComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'StringPropComponent',

  validAttributes: {
    accessibilityHint: true,
    accessibilityRole: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture TWO_COMPONENTS_DIFFERENT_FILES 1`] = `
Map {
  "TWO_COMPONENTS_DIFFERENT_FILESNativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'MultiFile1NativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'MultiFile1NativeComponent',

  validAttributes: {
    disabled: true,
  },
}));

let nativeComponentName = 'MultiFile2NativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'MultiFile2NativeComponent',

  validAttributes: {
    disabled: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture TWO_COMPONENTS_SAME_FILE 1`] = `
Map {
  "TWO_COMPONENTS_SAME_FILENativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');

let nativeComponentName = 'MultiComponent1NativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'MultiComponent1NativeComponent',

  validAttributes: {
    disabled: true,
  },
}));

let nativeComponentName = 'MultiComponent2NativeComponent';

export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'MultiComponent2NativeComponent',

  validAttributes: {
    disabled: true,
  },
}));
",
}
`;

exports[`GenerateViewConfigJs can generate fixture with a deprecated view config name 1`] = `
Map {
  "DEPRECATED_VIEW_CONFIG_NAMENativeViewConfig.js" => "
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 *
 * @generated by codegen project: GenerateViewConfigJs.js
 */

'use strict';

const NativeComponentRegistry = require('NativeComponentRegistry');
const {UIManager} = require(\\"react-native\\")

let nativeComponentName = 'NativeComponentName';
if (UIManager.getViewManagerConfig('NativeComponentName')) {
  nativeComponentName = 'NativeComponentName';
} else if (UIManager.getViewManagerConfig('DeprecatedNativeComponentName')) {
  nativeComponentName = 'DeprecatedNativeComponentName';
} else {
  throw new Error('Failed to find native component for either \\"NativeComponentName\\" or \\"DeprecatedNativeComponentName\\"');
}
export default NativeComponentRegistry.get(nativeComponentName, () => ({
  uiViewClassName: 'NativeComponentName',
  validAttributes: {},
}));
",
}
`;
