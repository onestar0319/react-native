// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT 1`] = `"Module SampleTurboModule: Detected a type of Array, without type parameters."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM 1`] = `"Module SampleTurboModule: Detected a type of Array, without type parameters."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_NOT_ONLY_METHODS 1`] = `"Only methods are supported as module properties. Found BooleanTypeAnnotation in sampleBool"`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE 1`] = `"Module SampleTurboModule: Detected a type of Promise, without type parameters."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT 1`] = `"Module SampleTurboModule: Detected a type of $ReadOnly, with 0 type parameters specified. Expected exactly 1."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_UNNAMED_PARAMS 1`] = `"Module SampleTurboModule: Detected a FunctionTypeAnnotation with an unnamed param. Please name all params."`;

exports[`RN Codegen Flow Parser Fails with error message TWO_NATIVE_EXTENDING_TURBO_MODULE 1`] = `"File contains declarations of more than one module: Spec, Spec2. Please declare exactly one module in this file."`;

exports[`RN Codegen Flow Parser Fails with error message TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT 1`] = `"File neither contains a module declaration, nor a component declaration. For module declarations, please make sure your file has an InterfaceDeclaration extending TurboModule. For component declarations, please make sure your file has a default export calling the codegenNativeComponent<Props>(...) macro."`;

exports[`RN Codegen Flow Parser can generate fixture EMPTY_NATIVE_MODULE 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: { SampleTurboModule: { aliases: {}, properties: [] } }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ALIASES 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {
            ObjectAlias: {
              nullable: false,
              type: 'ObjectTypeAnnotation',
              properties: [
                {
                  name: 'x',
                  optional: false,
                  typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                },
                {
                  name: 'y',
                  optional: false,
                  typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                },
                {
                  name: 'label',
                  optional: false,
                  typeAnnotation: { nullable: false, type: 'StringTypeAnnotation' }
                },
                {
                  name: 'truthy',
                  optional: false,
                  typeAnnotation: { nullable: false, type: 'BooleanTypeAnnotation' }
                }
              ]
            }
          },
          properties: [
            {
              name: 'getNumber',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getVoid',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [],
                nullable: false
              }
            },
            {
              name: 'getArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ObjectTypeAnnotation',
                  properties: [
                    {
                      name: 'a',
                      optional: false,
                      typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                    }
                  ]
                },
                params: [
                  {
                    name: 'a',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ArrayTypeAnnotation',
                      elementType: { nullable: false, type: 'NumberTypeAnnotation' }
                    }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getStringFromAlias',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'StringTypeAnnotation' },
                params: [
                  {
                    name: 'a',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'TypeAliasTypeAnnotation',
                      name: 'ObjectAlias'
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ArrayTypeAnnotation',
                  elementType: { nullable: false, type: 'StringTypeAnnotation' }
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ArrayTypeAnnotation',
                      elementType: { nullable: false, type: 'StringTypeAnnotation' }
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'ArrayTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'ArrayTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_BASIC_ARRAY 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ArrayTypeAnnotation',
                  elementType: { nullable: false, type: 'StringTypeAnnotation' }
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ArrayTypeAnnotation',
                      elementType: { nullable: false, type: 'StringTypeAnnotation' }
                    }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ArrayTypeAnnotation',
                  elementType: { nullable: false, type: 'StringTypeAnnotation' }
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ArrayTypeAnnotation',
                      elementType: { nullable: false, type: 'StringTypeAnnotation' }
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_BASIC_PARAM_TYPES 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'passBool',
              optional: true,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'BooleanTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'passNumber',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'passString',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'StringTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'passStringish',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'StringTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_CALLBACK 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getValueWithCallback',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'callback',
                    optional: false,
                    typeAnnotation: {
                      type: 'FunctionTypeAnnotation',
                      returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                      params: [
                        {
                          name: 'value',
                          optional: false,
                          typeAnnotation: {
                            nullable: false,
                            type: 'StringTypeAnnotation'
                          }
                        },
                        {
                          name: 'arr',
                          optional: false,
                          typeAnnotation: {
                            nullable: false,
                            type: 'ArrayTypeAnnotation',
                            elementType: {
                              nullable: false,
                              type: 'ArrayTypeAnnotation',
                              elementType: {
                                nullable: false,
                                type: 'StringTypeAnnotation'
                              }
                            }
                          }
                        }
                      ],
                      nullable: false
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_COMPLEX_ARRAY 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ArrayTypeAnnotation',
                  elementType: {
                    nullable: false,
                    type: 'ArrayTypeAnnotation',
                    elementType: {
                      nullable: false,
                      type: 'ArrayTypeAnnotation',
                      elementType: { nullable: false, type: 'StringTypeAnnotation' }
                    }
                  }
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ArrayTypeAnnotation',
                      elementType: {
                        nullable: false,
                        type: 'ArrayTypeAnnotation',
                        elementType: {
                          nullable: false,
                          type: 'ArrayTypeAnnotation',
                          elementType: {
                            nullable: false,
                            type: 'ArrayTypeAnnotation',
                            elementType: {
                              nullable: false,
                              type: 'ArrayTypeAnnotation',
                              elementType: {
                                nullable: false,
                                type: 'StringTypeAnnotation'
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_COMPLEX_OBJECTS 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getObject',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ObjectTypeAnnotation',
                  properties: [
                    {
                      name: 'const1',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'ObjectTypeAnnotation',
                        properties: [
                          {
                            name: 'const1',
                            optional: false,
                            typeAnnotation: {
                              nullable: false,
                              type: 'BooleanTypeAnnotation'
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ObjectTypeAnnotation',
                      properties: [
                        {
                          name: 'const1',
                          optional: false,
                          typeAnnotation: {
                            nullable: false,
                            type: 'ObjectTypeAnnotation',
                            properties: [
                              {
                                name: 'const1',
                                optional: false,
                                typeAnnotation: {
                                  nullable: false,
                                  type: 'BooleanTypeAnnotation'
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getReadOnlyObject',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ObjectTypeAnnotation',
                  properties: [
                    {
                      name: 'const1',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'ObjectTypeAnnotation',
                        properties: [
                          {
                            name: 'const1',
                            optional: false,
                            typeAnnotation: {
                              nullable: false,
                              type: 'BooleanTypeAnnotation'
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ObjectTypeAnnotation',
                      properties: [
                        {
                          name: 'const1',
                          optional: false,
                          typeAnnotation: {
                            nullable: false,
                            type: 'ObjectTypeAnnotation',
                            properties: [
                              {
                                name: 'const1',
                                optional: false,
                                typeAnnotation: {
                                  nullable: false,
                                  type: 'BooleanTypeAnnotation'
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getObject2',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'GenericObjectTypeAnnotation'
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ObjectTypeAnnotation',
                      properties: [
                        {
                          name: 'a',
                          optional: false,
                          typeAnnotation: {
                            nullable: false,
                            type: 'StringTypeAnnotation'
                          }
                        }
                      ]
                    }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getObjectInArray',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ArrayTypeAnnotation',
                  elementType: {
                    nullable: false,
                    type: 'ObjectTypeAnnotation',
                    properties: [
                      {
                        name: 'const1',
                        optional: false,
                        typeAnnotation: {
                          nullable: false,
                          type: 'ObjectTypeAnnotation',
                          properties: [
                            {
                              name: 'const1',
                              optional: false,
                              typeAnnotation: {
                                nullable: false,
                                type: 'BooleanTypeAnnotation'
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ObjectTypeAnnotation',
                      properties: [
                        {
                          name: 'const1',
                          optional: false,
                          typeAnnotation: {
                            nullable: false,
                            type: 'ObjectTypeAnnotation',
                            properties: [
                              {
                                name: 'const1',
                                optional: false,
                                typeAnnotation: {
                                  nullable: false,
                                  type: 'BooleanTypeAnnotation'
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getConstants',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ObjectTypeAnnotation',
                  properties: [
                    {
                      name: 'isTesting',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'BooleanTypeAnnotation'
                      }
                    },
                    {
                      name: 'reactNativeVersion',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'ObjectTypeAnnotation',
                        properties: [
                          {
                            name: 'major',
                            optional: false,
                            typeAnnotation: {
                              nullable: false,
                              type: 'NumberTypeAnnotation'
                            }
                          },
                          {
                            name: 'minor',
                            optional: false,
                            typeAnnotation: {
                              nullable: false,
                              type: 'NumberTypeAnnotation'
                            }
                          },
                          {
                            name: 'patch',
                            optional: true,
                            typeAnnotation: {
                              nullable: false,
                              type: 'NumberTypeAnnotation'
                            }
                          },
                          {
                            name: 'prerelease',
                            optional: false,
                            typeAnnotation: {
                              nullable: true,
                              type: 'NumberTypeAnnotation'
                            }
                          }
                        ]
                      }
                    },
                    {
                      name: 'forceTouchAvailable',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'BooleanTypeAnnotation'
                      }
                    },
                    {
                      name: 'osVersion',
                      optional: false,
                      typeAnnotation: { nullable: false, type: 'StringTypeAnnotation' }
                    },
                    {
                      name: 'systemName',
                      optional: false,
                      typeAnnotation: { nullable: false, type: 'StringTypeAnnotation' }
                    },
                    {
                      name: 'interfaceIdiom',
                      optional: false,
                      typeAnnotation: { nullable: false, type: 'StringTypeAnnotation' }
                    }
                  ]
                },
                params: [],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_FLOAT_AND_INT32 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getInt',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'Int32TypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'Int32TypeAnnotation' }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'getFloat',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'FloatTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: false, type: 'FloatTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_NESTED_ALIASES 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {
            Bar: {
              nullable: false,
              type: 'ObjectTypeAnnotation',
              properties: [
                {
                  name: 'z',
                  optional: false,
                  typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                }
              ]
            },
            Foo: {
              nullable: false,
              type: 'ObjectTypeAnnotation',
              properties: [
                {
                  name: 'bar1',
                  optional: false,
                  typeAnnotation: {
                    nullable: false,
                    type: 'TypeAliasTypeAnnotation',
                    name: 'Bar'
                  }
                },
                {
                  name: 'bar2',
                  optional: false,
                  typeAnnotation: {
                    nullable: false,
                    type: 'TypeAliasTypeAnnotation',
                    name: 'Bar'
                  }
                }
              ]
            }
          },
          properties: [
            {
              name: 'foo1',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'TypeAliasTypeAnnotation',
                  name: 'Foo'
                },
                params: [
                  {
                    name: 'x',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'TypeAliasTypeAnnotation',
                      name: 'Foo'
                    }
                  }
                ],
                nullable: false
              }
            },
            {
              name: 'foo2',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'x',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'TypeAliasTypeAnnotation',
                      name: 'Foo'
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_NULLABLE_PARAM 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'voidFunc',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'VoidTypeAnnotation' },
                params: [
                  {
                    name: 'arg',
                    optional: false,
                    typeAnnotation: { nullable: true, type: 'StringTypeAnnotation' }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {
            DisplayMetricsAndroid: {
              nullable: false,
              type: 'ObjectTypeAnnotation',
              properties: [
                {
                  name: 'width',
                  optional: false,
                  typeAnnotation: { nullable: false, type: 'NumberTypeAnnotation' }
                }
              ]
            }
          },
          properties: [
            {
              name: 'getConstants',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ObjectTypeAnnotation',
                  properties: [
                    {
                      name: 'Dimensions',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'ObjectTypeAnnotation',
                        properties: [
                          {
                            name: 'windowPhysicalPixels',
                            optional: false,
                            typeAnnotation: {
                              nullable: false,
                              type: 'TypeAliasTypeAnnotation',
                              name: 'DisplayMetricsAndroid'
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                params: [],
                nullable: false
              }
            },
            {
              name: 'getConstants2',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ObjectTypeAnnotation',
                  properties: [
                    {
                      name: 'Dimensions',
                      optional: false,
                      typeAnnotation: {
                        nullable: false,
                        type: 'ObjectTypeAnnotation',
                        properties: [
                          {
                            name: 'windowPhysicalPixels',
                            optional: false,
                            typeAnnotation: {
                              nullable: false,
                              type: 'TypeAliasTypeAnnotation',
                              name: 'DisplayMetricsAndroid'
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                params: [],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_PROMISE 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getValueWithPromise',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'PromiseTypeAnnotation' },
                params: [],
                nullable: false
              }
            },
            {
              name: 'getValueWithPromiseDefinedSomewhereElse',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'PromiseTypeAnnotation' },
                params: [],
                nullable: false
              }
            },
            {
              name: 'getValueWithPromiseObjDefinedSomewhereElse',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: { nullable: false, type: 'PromiseTypeAnnotation' },
                params: [],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ROOT_TAG 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getRootTag',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'ReservedFunctionValueTypeAnnotation',
                  name: 'RootTag'
                },
                params: [
                  {
                    name: 'rootTag',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'ReservedFunctionValueTypeAnnotation',
                      name: 'RootTag'
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_SIMPLE_OBJECT 1`] = `
"{
  modules: {
    NativeSampleTurboModule: {
      nativeModules: {
        SampleTurboModule: {
          aliases: {},
          properties: [
            {
              name: 'getObject',
              optional: false,
              typeAnnotation: {
                type: 'FunctionTypeAnnotation',
                returnTypeAnnotation: {
                  nullable: false,
                  type: 'GenericObjectTypeAnnotation'
                },
                params: [
                  {
                    name: 'o',
                    optional: false,
                    typeAnnotation: {
                      nullable: false,
                      type: 'GenericObjectTypeAnnotation'
                    }
                  }
                ],
                nullable: false
              }
            }
          ]
        }
      }
    }
  }
}"
`;
