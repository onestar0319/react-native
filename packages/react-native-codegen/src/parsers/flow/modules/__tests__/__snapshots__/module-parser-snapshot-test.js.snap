// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT 1`] = `"Module NativeSampleTurboModule: Generic 'Array' must have type parameters."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_ARRAY_WITH_NO_TYPE_FOR_CONTENT_AS_PARAM 1`] = `"Module NativeSampleTurboModule: Generic 'Array' must have type parameters."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_NOT_ONLY_METHODS 1`] = `"Module NativeSampleTurboModule: Flow interfaces extending TurboModule must only contain 'FunctionTypeAnnotation's. Property 'sampleBool' refers to a 'BooleanTypeAnnotation'."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_PROMISE_WITHOUT_TYPE 1`] = `"Module NativeSampleTurboModule: Generic 'Promise' must have type parameters."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_READ_ONLY_OBJECT_NO_TYPE_FOR_CONTENT 1`] = `"Module NativeSampleTurboModule: Generic '$ReadOnly' must have exactly one type parameter."`;

exports[`RN Codegen Flow Parser Fails with error message NATIVE_MODULES_WITH_UNNAMED_PARAMS 1`] = `"Module NativeSampleTurboModule: All function parameters must be named."`;

exports[`RN Codegen Flow Parser Fails with error message TWO_NATIVE_EXTENDING_TURBO_MODULE 1`] = `"Module NativeSampleTurboModule: Every NativeModule spec file must declare exactly one NativeModule Flow interface. This file declares 2: 'Spec', and 'Spec2'. Please remove the extraneous Flow interface declarations."`;

exports[`RN Codegen Flow Parser Fails with error message TWO_NATIVE_MODULES_EXPORTED_WITH_DEFAULT 1`] = `"Module NativeSampleTurboModule: No Flow interfaces extending TurboModule were detected in this NativeModule spec."`;

exports[`RN Codegen Flow Parser can generate fixture ANDROID_ONLY_NATIVE_MODULE 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': []
      },
      'moduleNames': [
        'SampleTurboModuleAndroid'
      ],
      'excludedPlatforms': [
        'iOS'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture EMPTY_NATIVE_MODULE 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': []
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture IOS_ONLY_NATIVE_MODULE 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': []
      },
      'moduleNames': [
        'SampleTurboModuleIOS'
      ],
      'excludedPlatforms': [
        'android'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ALIASES 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {
        'ObjectAlias': {
          'type': 'ObjectTypeAnnotation',
          'properties': [
            {
              'name': 'x',
              'optional': false,
              'typeAnnotation': {
                'type': 'NumberTypeAnnotation'
              }
            },
            {
              'name': 'y',
              'optional': false,
              'typeAnnotation': {
                'type': 'NumberTypeAnnotation'
              }
            },
            {
              'name': 'label',
              'optional': false,
              'typeAnnotation': {
                'type': 'StringTypeAnnotation'
              }
            },
            {
              'name': 'truthy',
              'optional': false,
              'typeAnnotation': {
                'type': 'BooleanTypeAnnotation'
              }
            }
          ]
        }
      },
      'spec': {
        'properties': [
          {
            'name': 'getNumber',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'NumberTypeAnnotation'
                  }
                }
              ]
            }
          },
          {
            'name': 'getVoid',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': []
            }
          },
          {
            'name': 'getArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ObjectTypeAnnotation',
                'properties': [
                  {
                    'name': 'a',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'NumberTypeAnnotation'
                    }
                  }
                ]
              },
              'params': [
                {
                  'name': 'a',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ArrayTypeAnnotation',
                    'elementType': {
                      'type': 'NumberTypeAnnotation'
                    }
                  }
                }
              ]
            }
          },
          {
            'name': 'getStringFromAlias',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'StringTypeAnnotation'
              },
              'params': [
                {
                  'name': 'a',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'TypeAliasTypeAnnotation',
                    'name': 'ObjectAlias'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ARRAY_WITH_ALIAS 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ArrayTypeAnnotation',
                'elementType': {
                  'type': 'StringTypeAnnotation'
                }
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ArrayTypeAnnotation',
                    'elementType': {
                      'type': 'StringTypeAnnotation'
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ARRAY_WITH_UNION_AND_TOUPLE 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ArrayTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ArrayTypeAnnotation'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_BASIC_ARRAY 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ArrayTypeAnnotation',
                'elementType': {
                  'type': 'StringTypeAnnotation'
                }
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ArrayTypeAnnotation',
                    'elementType': {
                      'type': 'StringTypeAnnotation'
                    }
                  }
                }
              ]
            }
          },
          {
            'name': 'getArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ArrayTypeAnnotation',
                'elementType': {
                  'type': 'StringTypeAnnotation'
                }
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ArrayTypeAnnotation',
                    'elementType': {
                      'type': 'StringTypeAnnotation'
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_BASIC_PARAM_TYPES 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'passBool',
            'optional': true,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'BooleanTypeAnnotation'
                  }
                }
              ]
            }
          },
          {
            'name': 'passNumber',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'NumberTypeAnnotation'
                  }
                }
              ]
            }
          },
          {
            'name': 'passString',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'StringTypeAnnotation'
                  }
                }
              ]
            }
          },
          {
            'name': 'passStringish',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'StringTypeAnnotation'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_CALLBACK 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getValueWithCallback',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'callback',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'FunctionTypeAnnotation',
                    'returnTypeAnnotation': {
                      'type': 'VoidTypeAnnotation'
                    },
                    'params': [
                      {
                        'name': 'value',
                        'optional': false,
                        'typeAnnotation': {
                          'type': 'StringTypeAnnotation'
                        }
                      },
                      {
                        'name': 'arr',
                        'optional': false,
                        'typeAnnotation': {
                          'type': 'ArrayTypeAnnotation',
                          'elementType': {
                            'type': 'ArrayTypeAnnotation',
                            'elementType': {
                              'type': 'StringTypeAnnotation'
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_COMPLEX_ARRAY 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ArrayTypeAnnotation',
                'elementType': {
                  'type': 'ArrayTypeAnnotation',
                  'elementType': {
                    'type': 'ArrayTypeAnnotation',
                    'elementType': {
                      'type': 'StringTypeAnnotation'
                    }
                  }
                }
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ArrayTypeAnnotation',
                    'elementType': {
                      'type': 'ArrayTypeAnnotation',
                      'elementType': {
                        'type': 'ArrayTypeAnnotation',
                        'elementType': {
                          'type': 'ArrayTypeAnnotation',
                          'elementType': {
                            'type': 'ArrayTypeAnnotation',
                            'elementType': {
                              'type': 'StringTypeAnnotation'
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_COMPLEX_OBJECTS 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getObject',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ObjectTypeAnnotation',
                'properties': [
                  {
                    'name': 'const1',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'ObjectTypeAnnotation',
                      'properties': [
                        {
                          'name': 'const1',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'BooleanTypeAnnotation'
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ObjectTypeAnnotation',
                    'properties': [
                      {
                        'name': 'const1',
                        'optional': false,
                        'typeAnnotation': {
                          'type': 'ObjectTypeAnnotation',
                          'properties': [
                            {
                              'name': 'const1',
                              'optional': false,
                              'typeAnnotation': {
                                'type': 'BooleanTypeAnnotation'
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            'name': 'getReadOnlyObject',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ObjectTypeAnnotation',
                'properties': [
                  {
                    'name': 'const1',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'ObjectTypeAnnotation',
                      'properties': [
                        {
                          'name': 'const1',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'BooleanTypeAnnotation'
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ObjectTypeAnnotation',
                    'properties': [
                      {
                        'name': 'const1',
                        'optional': false,
                        'typeAnnotation': {
                          'type': 'ObjectTypeAnnotation',
                          'properties': [
                            {
                              'name': 'const1',
                              'optional': false,
                              'typeAnnotation': {
                                'type': 'BooleanTypeAnnotation'
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            'name': 'getObject2',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'GenericObjectTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ObjectTypeAnnotation',
                    'properties': [
                      {
                        'name': 'a',
                        'optional': false,
                        'typeAnnotation': {
                          'type': 'StringTypeAnnotation'
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            'name': 'getObjectInArray',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ArrayTypeAnnotation',
                'elementType': {
                  'type': 'ObjectTypeAnnotation',
                  'properties': [
                    {
                      'name': 'const1',
                      'optional': false,
                      'typeAnnotation': {
                        'type': 'ObjectTypeAnnotation',
                        'properties': [
                          {
                            'name': 'const1',
                            'optional': false,
                            'typeAnnotation': {
                              'type': 'BooleanTypeAnnotation'
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ObjectTypeAnnotation',
                    'properties': [
                      {
                        'name': 'const1',
                        'optional': false,
                        'typeAnnotation': {
                          'type': 'ObjectTypeAnnotation',
                          'properties': [
                            {
                              'name': 'const1',
                              'optional': false,
                              'typeAnnotation': {
                                'type': 'BooleanTypeAnnotation'
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_COMPLEX_OBJECTS_WITH_NULLABLE_KEY 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getConstants',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ObjectTypeAnnotation',
                'properties': [
                  {
                    'name': 'isTesting',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'BooleanTypeAnnotation'
                    }
                  },
                  {
                    'name': 'reactNativeVersion',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'ObjectTypeAnnotation',
                      'properties': [
                        {
                          'name': 'major',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'NumberTypeAnnotation'
                          }
                        },
                        {
                          'name': 'minor',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'NumberTypeAnnotation'
                          }
                        },
                        {
                          'name': 'patch',
                          'optional': true,
                          'typeAnnotation': {
                            'type': 'NumberTypeAnnotation'
                          }
                        },
                        {
                          'name': 'prerelease',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'NullableTypeAnnotation',
                            'typeAnnotation': {
                              'type': 'NumberTypeAnnotation'
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    'name': 'forceTouchAvailable',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'BooleanTypeAnnotation'
                    }
                  },
                  {
                    'name': 'osVersion',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'StringTypeAnnotation'
                    }
                  },
                  {
                    'name': 'systemName',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'StringTypeAnnotation'
                    }
                  },
                  {
                    'name': 'interfaceIdiom',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'StringTypeAnnotation'
                    }
                  }
                ]
              },
              'params': []
            }
          }
        ]
      },
      'moduleNames': [
        'PlatformConstants'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_FLOAT_AND_INT32 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getInt',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'Int32TypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'Int32TypeAnnotation'
                  }
                }
              ]
            }
          },
          {
            'name': 'getFloat',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'FloatTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'FloatTypeAnnotation'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_NESTED_ALIASES 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {
        'Bar': {
          'type': 'ObjectTypeAnnotation',
          'properties': [
            {
              'name': 'z',
              'optional': false,
              'typeAnnotation': {
                'type': 'NumberTypeAnnotation'
              }
            }
          ]
        },
        'Foo': {
          'type': 'ObjectTypeAnnotation',
          'properties': [
            {
              'name': 'bar1',
              'optional': false,
              'typeAnnotation': {
                'type': 'TypeAliasTypeAnnotation',
                'name': 'Bar'
              }
            },
            {
              'name': 'bar2',
              'optional': false,
              'typeAnnotation': {
                'type': 'TypeAliasTypeAnnotation',
                'name': 'Bar'
              }
            }
          ]
        }
      },
      'spec': {
        'properties': [
          {
            'name': 'foo1',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'TypeAliasTypeAnnotation',
                'name': 'Foo'
              },
              'params': [
                {
                  'name': 'x',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'TypeAliasTypeAnnotation',
                    'name': 'Foo'
                  }
                }
              ]
            }
          },
          {
            'name': 'foo2',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'x',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'TypeAliasTypeAnnotation',
                    'name': 'Foo'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_NULLABLE_PARAM 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'voidFunc',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'VoidTypeAnnotation'
              },
              'params': [
                {
                  'name': 'arg',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'NullableTypeAnnotation',
                    'typeAnnotation': {
                      'type': 'StringTypeAnnotation'
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_OBJECT_WITH_OBJECT_DEFINED_IN_FILE_AS_PROPERTY 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {
        'DisplayMetricsAndroid': {
          'type': 'ObjectTypeAnnotation',
          'properties': [
            {
              'name': 'width',
              'optional': false,
              'typeAnnotation': {
                'type': 'NumberTypeAnnotation'
              }
            }
          ]
        }
      },
      'spec': {
        'properties': [
          {
            'name': 'getConstants',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ObjectTypeAnnotation',
                'properties': [
                  {
                    'name': 'Dimensions',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'ObjectTypeAnnotation',
                      'properties': [
                        {
                          'name': 'windowPhysicalPixels',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'TypeAliasTypeAnnotation',
                            'name': 'DisplayMetricsAndroid'
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              'params': []
            }
          },
          {
            'name': 'getConstants2',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ObjectTypeAnnotation',
                'properties': [
                  {
                    'name': 'Dimensions',
                    'optional': false,
                    'typeAnnotation': {
                      'type': 'ObjectTypeAnnotation',
                      'properties': [
                        {
                          'name': 'windowPhysicalPixels',
                          'optional': false,
                          'typeAnnotation': {
                            'type': 'TypeAliasTypeAnnotation',
                            'name': 'DisplayMetricsAndroid'
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              'params': []
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_PROMISE 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getValueWithPromise',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'PromiseTypeAnnotation'
              },
              'params': []
            }
          },
          {
            'name': 'getValueWithPromiseDefinedSomewhereElse',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'PromiseTypeAnnotation'
              },
              'params': []
            }
          },
          {
            'name': 'getValueWithPromiseObjDefinedSomewhereElse',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'PromiseTypeAnnotation'
              },
              'params': []
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_ROOT_TAG 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getRootTag',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'ReservedTypeAnnotation',
                'name': 'RootTag'
              },
              'params': [
                {
                  'name': 'rootTag',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'ReservedTypeAnnotation',
                    'name': 'RootTag'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_SIMPLE_OBJECT 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getObject',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'GenericObjectTypeAnnotation'
              },
              'params': [
                {
                  'name': 'o',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'GenericObjectTypeAnnotation'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;

exports[`RN Codegen Flow Parser can generate fixture NATIVE_MODULE_WITH_UNSAFE_OBJECT 1`] = `
"{
  'modules': {
    'NativeSampleTurboModule': {
      'type': 'NativeModule',
      'aliases': {},
      'spec': {
        'properties': [
          {
            'name': 'getUnsafeObject',
            'optional': false,
            'typeAnnotation': {
              'type': 'FunctionTypeAnnotation',
              'returnTypeAnnotation': {
                'type': 'GenericObjectTypeAnnotation'
              },
              'params': [
                {
                  'name': 'o',
                  'optional': false,
                  'typeAnnotation': {
                    'type': 'GenericObjectTypeAnnotation'
                  }
                }
              ]
            }
          }
        ]
      },
      'moduleNames': [
        'SampleTurboModule'
      ]
    }
  }
}"
`;
