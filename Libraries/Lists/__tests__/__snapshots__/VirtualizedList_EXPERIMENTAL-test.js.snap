// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VirtualizedList (Experimental functionality) keeps viewport above last focused rendered 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 70,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={12}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={13}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList (Experimental functionality) keeps viewport below last focused rendered 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      style={
        Object {
          "height": 50,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList (Experimental functionality) virtualizes away last focused index if item removed 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 19,
      "rowCount": 19,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      style={
        Object {
          "height": 70,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={9}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={10}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={11}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={12}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={13}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList (Experimental functionality) virtualizes away last focused item if focus changes to a new cell 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      style={
        Object {
          "height": 110,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={12}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={13}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList forwards correct stickyHeaderIndices when ListHeaderComponent present 1`] = `
<RCTScrollView
  ListHeaderComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
        "sticky": true,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
        "sticky": true,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
        "sticky": true,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
        "sticky": true,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={10}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    Array [
      0,
      3,
      6,
      9,
    ]
  }
>
  <View>
    <View
      onLayout={[Function]}
    >
      <Header />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={9}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList forwards correct stickyHeaderIndices when all in initial render window 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
        "sticky": true,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
        "sticky": true,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
        "sticky": true,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
        "sticky": true,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={10}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    Array [
      0,
      3,
      6,
      9,
    ]
  }
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={9}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList forwards correct stickyHeaderIndices when partially in initial render window 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
        "sticky": true,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
        "sticky": true,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
        "sticky": true,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
        "sticky": true,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    Array [
      0,
      3,
    ]
  }
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 50,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList handles nested lists 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 2,
      "rowCount": 2,
    }
  }
  data={
    Array [
      Object {
        "key": "outer0",
      },
      Object {
        "key": "outer1",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View
        data={
          Array [
            Object {
              "key": "outer0:inner0",
            },
            Object {
              "key": "outer0:inner1",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={false}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
      >
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <item
            title="outer0:inner0"
          />
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <item
            title="outer0:inner1"
          />
        </View>
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <RCTScrollView
        accessibilityCollection={
          Object {
            "columnCount": 1,
            "hierarchical": false,
            "itemCount": 2,
            "rowCount": 2,
          }
        }
        data={
          Array [
            Object {
              "key": "outer1:inner0",
            },
            Object {
              "key": "outer1:inner1",
            },
          ]
        }
        getItem={[Function]}
        getItemCount={[Function]}
        horizontal={true}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        renderItem={[Function]}
        scrollEventThrottle={50}
        stickyHeaderIndices={Array []}
      >
        <View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <item
              title="outer1:inner0"
            />
          </View>
          <View
            onFocusCapture={[Function]}
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "flexDirection": "row",
                },
                null,
              ]
            }
          >
            <item
              title="outer1:inner1"
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList handles separators correctly 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 3,
      "rowCount": 3,
    }
  }
  data={
    Array [
      Object {
        "key": "i0",
      },
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i0"
      />
      <separator
        highlighted={false}
        leadingItem={
          Object {
            "key": "i0",
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i1"
      />
      <separator
        highlighted={false}
        leadingItem={
          Object {
            "key": "i1",
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i2"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList handles separators correctly 2`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 3,
      "rowCount": 3,
    }
  }
  data={
    Array [
      Object {
        "key": "i0",
      },
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i0"
      />
      <separator
        highlighted={true}
        leadingItem={
          Object {
            "key": "i0",
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i1"
      />
      <separator
        highlighted={true}
        leadingItem={
          Object {
            "key": "i1",
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i2"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList handles separators correctly 3`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 3,
      "rowCount": 3,
    }
  }
  data={
    Array [
      Object {
        "key": "i0",
      },
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i0"
      />
      <separator
        highlighted={true}
        leadingItem={
          Object {
            "key": "i0",
          }
        }
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i1"
      />
      <separator
        highlighted={true}
        leadingItem={
          Object {
            "key": "i1",
          }
        }
        press={true}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        title="i2"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList keeps sticky headers above viewport visualized 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
        "sticky": true,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
        "sticky": true,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
        "sticky": true,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
        "sticky": true,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
        "sticky": true,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
        "sticky": true,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
        "sticky": true,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    Array [
      0,
      2,
      5,
      8,
    ]
  }
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={0}
      />
    </View>
    <View
      style={
        Object {
          "height": 110,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={12}
      />
    </View>
    <View
      style={
        Object {
          "height": 10,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList renders all the bells and whistles 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 5,
      "rowCount": 5,
    }
  }
  data={
    Array [
      Object {
        "id": "0",
      },
      Object {
        "id": "1",
      },
      Object {
        "id": "2",
      },
      Object {
        "id": "3",
      },
      Object {
        "id": "4",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  invertStickyHeaders={true}
  inverted={true}
  keyExtractor={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onRefresh={[MockFunction]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      onRefresh={[MockFunction]}
      refreshing={false}
    />
  }
  refreshing={false}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "transform": Array [
          Object {
            "scaleY": -1,
          },
        ],
      },
      undefined,
    ]
  }
>
  <RCTRefreshControl />
  <View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <header />
    </View>
    <View
      onFocusCapture={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <item
        value="0"
      />
      <separator />
    </View>
    <View
      onFocusCapture={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <item
        value="1"
      />
      <separator />
    </View>
    <View
      onFocusCapture={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <item
        value="2"
      />
      <separator />
    </View>
    <View
      onFocusCapture={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <item
        value="3"
      />
      <separator />
    </View>
    <View
      onFocusCapture={[Function]}
      style={
        Array [
          Object {
            "flexDirection": "column-reverse",
          },
          Object {
            "transform": Array [
              Object {
                "scaleY": -1,
              },
            ],
          },
        ]
      }
    >
      <item
        value="4"
      />
    </View>
    <View
      onLayout={[Function]}
      style={
        Object {
          "transform": Array [
            Object {
              "scaleY": -1,
            },
          ],
        }
      }
    >
      <footer />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList renders empty list 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 0,
      "rowCount": 0,
    }
  }
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View />
</RCTScrollView>
`;

exports[`VirtualizedList renders empty list after batch 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 0,
      "rowCount": 0,
    }
  }
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View />
</RCTScrollView>
`;

exports[`VirtualizedList renders empty list with empty component 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  ListFooterComponent={[Function]}
  ListHeaderComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 0,
      "rowCount": 0,
    }
  }
  data={Array []}
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onLayout={[Function]}
    >
      <header />
    </View>
    <empty />
    <View
      onLayout={[Function]}
    >
      <footer />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList renders list with empty component 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 1,
      "rowCount": 1,
    }
  }
  data={
    Array [
      Object {
        "key": "hello",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="hello"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList renders null list 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 0,
      "rowCount": 0,
    }
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View />
</RCTScrollView>
`;

exports[`VirtualizedList renders simple list 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 3,
      "rowCount": 3,
    }
  }
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i1"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i2"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i3"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList renders simple list using ListItemComponent 1`] = `
<RCTScrollView
  ListItemComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 3,
      "rowCount": 3,
    }
  }
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i1"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i2"
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="i3"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList renders sticky headers in viewport on batched render 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
        "sticky": true,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
        "sticky": true,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
        "sticky": true,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
        "sticky": true,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    Array [
      0,
      3,
    ]
  }
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 50,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList test getItem functionality where data is not an Array 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 0,
      "rowCount": 1,
    }
  }
  data={
    Map {
      "id_0" => Object {
        "key": "item_0",
      },
    }
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        value="item_0"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`VirtualizedList warns if both renderItem or ListItemComponent are specified. Uses ListItemComponent 1`] = `
<RCTScrollView
  ListItemComponent={[Function]}
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 1,
      "rowCount": 1,
    }
  }
  data={
    Array [
      Object {
        "key": "i1",
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <item
        testID="i1-ListItemComponent"
        value="i1"
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`adjusts render area with non-zero initialScrollIndex 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  initialScrollIndex={1}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={10}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={9}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={10}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={11}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={12}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={13}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`constrains batch render region when an item is removed 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 5,
      "rowCount": 5,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`discards intitial render if initialScrollIndex != 0 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  initialScrollIndex={5}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      style={
        Object {
          "height": 140,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`does not adjust render area until content area layed out 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={10}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 150,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`does not over-render when there is less than initialNumToRender cells 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={20}
  initialScrollIndex={4}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      style={
        Object {
          "height": 40,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={9}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`eventually renders all items when virtualization disabled 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  disableVirtualization={true}
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  initialScrollIndex={1}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={9}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`expands first in viewport to render up to maxToRenderPerBatch on initial render 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={2}
  initialScrollIndex={4}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      style={
        Object {
          "height": 40,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      style={
        Object {
          "height": 40,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`expands render area by maxToRenderPerBatch on tick 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  maxToRenderPerBatch={2}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      style={
        Object {
          "height": 130,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`gracefully handles negaitve initialScrollIndex 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={4}
  initialScrollIndex={-1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      style={
        Object {
          "height": 60,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`initially renders nothing when initialNumToRender is 0 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={0}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      style={
        Object {
          "height": 100,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders a zero-height tail spacer on initial render if getItemLayout not defined 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={3}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders full tail spacer if all cells measured 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={3}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 50,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders initialNumToRender cells when virtualization disabled 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  disableVirtualization={true}
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  initialScrollIndex={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders items before initialScrollIndex on first batch tick when virtualization disabled 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  disableVirtualization={true}
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  initialScrollIndex={5}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders list with custom column count 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 3,
      "hierarchical": false,
      "itemCount": 5,
      "rowCount": 2,
    }
  }
  data={
    Array [
      Object {
        "key": "i1",
      },
      Object {
        "key": "i2",
      },
      Object {
        "key": "i3",
      },
      Object {
        "key": "i4",
      },
      Object {
        "key": "i5",
      },
    ]
  }
  getCellsInItemCount={[Function]}
  getItem={[Function]}
  getItemCount={[Function]}
  numColumns={3}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          value="i1"
        />
        <item
          value="i2"
        />
        <item
          value="i3"
        />
      </View>
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <View>
        <item
          value="i4"
        />
        <item
          value="i5"
        />
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders new items when data is updated with non-zero initialScrollIndex 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 4,
      "rowCount": 4,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  initialScrollIndex={1}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={10}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders no spacers up to initialScrollIndex on first render when virtualization disabled 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  disableVirtualization={true}
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={2}
  initialScrollIndex={4}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders offset cells in initial render when initialScrollIndex set 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={4}
  initialScrollIndex={4}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      style={
        Object {
          "height": 40,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      style={
        Object {
          "height": 20,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders tail spacer up to last measured index if getItemLayout not defined 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={3}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 20,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders tail spacer up to last measured with irregular layout when getItemLayout undefined 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={3}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      style={
        Object {
          "height": 17,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders windowSize derived region at bottom 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={3}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      style={
        Object {
          "height": 40,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={9}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders windowSize derived region at top 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={3}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      style={
        Object {
          "height": 60,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders windowSize derived region in middle 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={3}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      style={
        Object {
          "height": 10,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      style={
        Object {
          "height": 10,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`renders zero-height tail spacer on batch render if cells not yet measured and getItemLayout not defined 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 10,
      "rowCount": 10,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  initialNumToRender={3}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      onLayout={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      style={
        Object {
          "height": 0,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`retains batch render region when an item is appended 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 11,
      "rowCount": 11,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  maxToRenderPerBatch={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={5}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={6}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={7}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={8}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={9}
      />
    </View>
    <View
      style={
        Object {
          "height": 10,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`retains initial render region when an item is appended 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 11,
      "rowCount": 11,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={3}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      style={
        Object {
          "height": 80,
        }
      }
    />
  </View>
</RCTScrollView>
`;

exports[`retains intitial render if initialScrollIndex == 0 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={5}
  initialScrollIndex={0}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 90,
        }
      }
    />
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={14}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={15}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={16}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={17}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={18}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={19}
      />
    </View>
  </View>
</RCTScrollView>
`;

exports[`unmounts sticky headers moved below viewport 1`] = `
<RCTScrollView
  accessibilityCollection={
    Object {
      "columnCount": 1,
      "hierarchical": false,
      "itemCount": 20,
      "rowCount": 20,
    }
  }
  data={
    Array [
      Object {
        "key": 0,
        "sticky": true,
      },
      Object {
        "key": 1,
      },
      Object {
        "key": 2,
      },
      Object {
        "key": 3,
        "sticky": true,
      },
      Object {
        "key": 4,
      },
      Object {
        "key": 5,
      },
      Object {
        "key": 6,
        "sticky": true,
      },
      Object {
        "key": 7,
      },
      Object {
        "key": 8,
      },
      Object {
        "key": 9,
        "sticky": true,
      },
      Object {
        "key": 10,
      },
      Object {
        "key": 11,
      },
      Object {
        "key": 12,
        "sticky": true,
      },
      Object {
        "key": 13,
      },
      Object {
        "key": 14,
      },
      Object {
        "key": 15,
        "sticky": true,
      },
      Object {
        "key": 16,
      },
      Object {
        "key": 17,
      },
      Object {
        "key": 18,
        "sticky": true,
      },
      Object {
        "key": 19,
      },
    ]
  }
  getItem={[Function]}
  getItemCount={[Function]}
  getItemLayout={[Function]}
  initialNumToRender={1}
  onContentSizeChange={[Function]}
  onLayout={[Function]}
  onMomentumScrollBegin={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={
    Array [
      0,
      3,
    ]
  }
  windowSize={1}
>
  <View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={0}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={1}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={2}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        sticky={true}
        value={3}
      />
    </View>
    <View
      onFocusCapture={[Function]}
      style={null}
    >
      <MockCellItem
        value={4}
      />
    </View>
    <View
      style={
        Object {
          "height": 150,
        }
      }
    />
  </View>
</RCTScrollView>
`;
